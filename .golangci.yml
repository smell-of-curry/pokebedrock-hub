# golangci-lint configuration for PokeBedrock Hub
# Reference: https://golangci-lint.run/usage/configuration/

run:
  # Timeout for analysis, e.g. 30s, 5m
  timeout: 5m
  
  # Exit code when at least one issue was found
  issues-exit-code: 1
  
  # Include test files or not
  tests: true

# Output configuration options
output:
  # Format: colored-line-number|line-number|json|tab|checkstyle|code-climate|junit-xml|github-actions
  formats:
    - format: colored-line-number
  
  # Print lines of code with issue
  print-issued-lines: true
  
  # Print linter name in the end of issue text
  print-linter-name: true
  
  # Add a prefix to the output file references
  path-prefix: ""
  
  # Sort results by: filepath, line and column
  sort-results: true

# All available settings of specific linters
linters-settings:
  cyclop:
    # Max cyclomatic complexity of function
    max-complexity: 15
    
  dupl:
    # Tokens count to trigger issue
    threshold: 100
    
  errcheck:
    # Report about not checking of errors in type assertions
    check-type-assertions: false
    
    # Report about assignment of errors to blank identifier
    check-blank: false
    
  exhaustive:
    # Check switch statements in generated files also
    check-generated: false
    # Presence of "default" case in switch statements satisfies exhaustiveness,
    # even if all enum members aren't listed in the switch
    default-signifies-exhaustive: false
    
  funlen:
    # Checks the number of lines in a function.
    lines: 80
    # Checks the number of statements in a function.
    statements: 40
    
  gci:
    # Section configuration to compare against.
    sections:
      - standard # Standard section: captures all standard packages.
      - default # Default section: contains all imports that could not be matched to another section type.
      - prefix(github.com/smell-of-curry/pokebedrock-hub) # Custom section: groups all imports with the specified Prefix.
      
  gocognit:
    # Minimal code complexity to report
    min-complexity: 20
    
  goconst:
    # Minimal length of string constant
    min-len: 3
    # Minimum occurrences of constant string count to trigger issue
    min-occurrences: 3
    # Ignore test files
    ignore-tests: false
    # Look for existing constants matching the values
    match-constant: true
    # Search also for duplicated numbers
    numbers: false
    # Minimum value, only works with goconst.numbers
    min: 3
    # Maximum value, only works with goconst.numbers
    max: 3
    # Ignore when constant is not used as function argument
    ignore-calls: true
    
  gocritic:
    # Which checks should be disabled; can't be combined with 'enabled-checks'
    disabled-checks:
      - regexpMust
      
    # Enable multiple checks by tags, run `golangci-lint help gocritic` to see all tags
    enabled-tags:
      - diagnostic
      - style
      - performance
      
    disabled-tags:
      - experimental
      
  gofumpt:
    # Choose whether to use the extra rules
    extra-rules: false
    
  mnd:
    # Don't include the "operation" and "assign"
    checks:
      - argument
      - case
      - condition
      - return
    # Ignored numbers
    ignored-numbers:
      - '0'
      - '1'
      - '2'
      - '3'
    # Ignored functions
    ignored-functions:
      - strings.SplitN
      
  gomodguard:
    allowed:
      # List of allowed modules
      modules:                                                        
        - github.com/df-mc/dragonfly
        - github.com/df-mc/atomic
        - github.com/df-mc/npc
        - github.com/getsentry/sentry-go
        - github.com/gin-gonic/gin
        - github.com/go-gl/mathgl
        - github.com/restartfu/gophig
        - github.com/sandertv/go-raknet
        - github.com/sandertv/gophertunnel
        - github.com/schollz/progressbar
        - github.com/AlecAivazis/survey
        - golang.org/x/text

        
  gosec:
    # To select a subset of rules to run.
    includes:
      - G401
      - G306
      - G101
    # To specify a set of rules to explicitly exclude.
    excludes:
      - G204
      
  gosimple:
    # Sxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    checks: [ "all" ]
    
  govet:
    # Settings per analyzer
    settings:
      printf: # Analyzer name, run `go tool vet help` to see all analyzers
        funcs: # Run `go tool vet help printf` to see available settings for `printf` analyzer
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
          - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
          
    # Enable or disable analyzers by name
    enable:
      - atomicalign
    enable-all: false
    disable-all: false
    
  lll:
    # Max line length, lines longer will be reported
    line-length: 120
    # Tab width in spaces
    tab-width: 1
    
  misspell:
    # Correct spellings using locale preferences for US or UK.
    locale: US
    ignore-words:
      - pokebedrock
      - minecraft
      - bedrock
      - gophertunnel
      - dragonfly
      - raknet
      - slapper
      - xuid
      
  nakedret:
    # Make an issue if func has more lines of code than this setting, and it has naked returns
    max-func-lines: 30
    
  prealloc:
    # XXX: we don't recommend using this linter before doing performance profiling.
    # For most programs usage of prealloc will be a premature optimization.
    
    # Report preallocation suggestions only on simple loops that have no returns/breaks/continues/gotos in them.
    simple: true
    range-loops: true # Report preallocation suggestions on range loops, true by default
    for-loops: false # Report preallocation suggestions on for loops, false by default
    
  staticcheck:
    # Sxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    checks: [ "all" ]
    
  stylecheck:
    # STxxxx checks in https://staticcheck.io/docs/configuration/options/#checks
    checks: [ "all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022" ]
    # https://staticcheck.io/docs/configuration/options/#dot_import_whitelist
    dot-import-whitelist:
      - fmt
      
  unused:
    # Mark all struct fields that have been written to as used.
    field-writes-are-uses: false
    # Treat IncludeTest = true as being used.
    post-statements-are-reads: false
    # Mark all local variables as used.
    local-variables-are-used: false
    # Mark all generated files as used.
    generated-is-used: true
    
  whitespace:
    multi-if: false   # Enforces newlines (or comments) after every multi-line if statement
    multi-func: false # Enforces newlines (or comments) after every multi-line function signature
    
  wsl:
    # See https://github.com/bombsimon/wsl/blob/master/doc/configuration.md for documentation of available settings.
    # These are the defaults for `golangci-lint`.
    strict-append: true
    allow-assign-and-call: true
    allow-multiline-assign: true
    allow-cuddle-declarations: false
    allow-trailing-comment: false
    force-case-trailing-whitespace: 0
    force-err-cuddling: false
    allow-separated-leading-comment: false

linters:
  # Disable all linters.
  disable-all: true
  
  # Enable specific linters
  enable:
    # Default linters
    - errcheck
    - gosimple
    - govet
    - ineffassign
    - staticcheck
    - unused
    
    # Additional linters for better code quality
    - bodyclose
    - contextcheck
    - cyclop
    - dupl
    - durationcheck
    - errname
    - errorlint
    - exhaustive
    - copyloopvar
    - forbidigo
    - funlen
    - gci
    - gocognit
    - goconst
    - gocritic
    - gofumpt
    - mnd
    - gomodguard
    - goprintffuncname
    - gosec
    - lll
    - makezero
    - misspell
    - nakedret
    - nestif
    - nilerr
    - nlreturn
    - noctx
    - prealloc
    - predeclared
    - revive
    - rowserrcheck
    - sqlclosecheck
    - stylecheck
    - thelper
    - tparallel
    - unconvert
    - unparam
    - wastedassign
    - whitespace
    - wsl

issues:
  # Which dirs to exclude: issues from them won't be reported
  exclude-dirs:
    - vendor
    - resources
    - docs
  
  # Which files to exclude: they will be analyzed, but issues from them won't be reported
  exclude-files:
    - ".*\\.pb\\.go$"
    - ".*_gen\\.go$"
  
  # Make issues output unique by line
  uniq-by-line: true
  
  # List of regexps of issue texts to exclude
  exclude:
    # errcheck: Almost all programs ignore errors on these functions and in most cases it's ok
    - "Error return value of .((os\\.)?std(out|err)\\..*|.*Close|.*Flush|os\\.Remove(All)?|.*print(f|ln)?|os\\.(Un)?Setenv). is not checked"
    
    # govet: Common false positives
    - "possible misuse of unsafe.Pointer"
    - "should have signature"
    
    # staticcheck: Exclude some staticcheck messages
    - "SA9003:"
    - "SA1019: .* is deprecated"
    
    # Exclude deprecated linter messages
    - "The linter .* is deprecated"
    
  # Excluding configuration per-path, per-linter, per-text and per-source
  exclude-rules:
    # Exclude some linters from running on tests files.
    - path: _test\.go
      linters:
        - gomnd
        - funlen
        - goconst
        - gocognit
        - errcheck
        - dupl
        - gosec
        
    # Exclude known linters from partially hard-to-fix issues
    - linters:
        - gocritic
      text: "unnecessaryDefer:"
      
    - linters:
        - lll
      source: "^//go:generate "
      
    # Exclude shadow checking on the variable named err
    - linters:
        - govet
      text: 'shadow: declaration of "(err|ctx)" shadows declaration at'
      
    # Exclude some staticcheck messages for generated files
    - path: ".*\\.pb\\.go"
      linters:
        - staticcheck
        
    # Exclude mnd for version numbers and common constants
    - linters:
        - mnd
      text: "Magic number: (19132|8080|404|500|200|100|16|32|64|1000|1024)"

  # Independently of option `exclude` we use default exclude patterns,
  # it can be disabled by this option.
  exclude-use-default: false
  
  # If set to true exclude and exclude-rules regular expressions become case sensitive.
  exclude-case-sensitive: false
  
  # The list of ids of default excludes to include or disable.
  include:
    - EXC0002 # disable excluding of issues about comments from golint
    
  # Maximum issues count per one linter.
  max-issues-per-linter: 50
  
  # Maximum count of issues with the same text.
  max-same-issues: 3
  
  # Show only new issues: if there are unstaged changes or untracked files, only those changes are analyzed
  new: false
  
  # Show only new issues created after git revision `REV`
  new-from-rev: ""
  
  # Show only new issues created in git patch with set file path.
  new-from-patch: ""
  
  # Fix found issues (if it's supported by the linter)
  fix: false

severity:
  # Set the default severity for issues.
  default-severity: error
  
  # Set the default severity for issues.
  case-sensitive: false
  
  # When a list of severity rules are provided, severity information will be added to lint issues.
  rules:
    - linters:
        - dupl
      severity: info
    - linters:
        - gocritic
      severity: info
    - linters:
        - lll
      severity: info